apply plugin: 'java'
apply plugin: 'com.palantir.external-publish-intellij'
apply plugin: 'org.jetbrains.grammarkit'

intellij {
    pluginName = "gradle-consistent-versions"
    updateSinceUntilBuild = true
    version = "2024.1"
    plugins = ['java', 'org.jetbrains.plugins.gradle']
}

patchPluginXml {
    pluginDescription = "Language plugin for version.props allowing for auto-lock updating"
    sinceBuild = '241' // TODO: test against this version of IntelliJ to ensure no regressions
    untilBuild = ''
}

// Javadoc fails if there are no public classes to javadoc, so make it stop complaining.
tasks.named("javadoc", Javadoc) {
    failOnError = false
}

sourceSets.main.java.srcDirs 'src/main/generated'

javaVersion {
    target = 17
    runtime = 17
}

dependencies {
    annotationProcessor 'org.immutables:value'
    compileOnly 'org.immutables:value::annotations'
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

grammarKit {
    jflexRelease = "1.9.2"
    grammarKitRelease = "2022.3.2"
}

generateParser {
    sourceFile = file('src/main/java/com/palantir/gradle/versions/intellij/VersionProps.bnf')
    targetRootOutputDir = file('src/main/generated')
    pathToParser = 'com/palantir/gradle/versions/intellij/parser/VersionPropsParser'
    pathToPsiRoot = 'com/palantir/gradle/versions/intellij/psi'
    purgeOldFiles = true
}

generateLexer {
    sourceFile = file('src/main/java/com/palantir/gradle/versions/intellij/VersionProps.flex')
    targetOutputDir = file('src/main/generated/com/palantir/gradle/versions/intellij')
    targetClass = 'com.palantir.gradle.versions.intellij.VersionPropsLexer'
    purgeOldFiles = true
}

compileJava.dependsOn generateParser, generateLexer